{"tags":[{"name":"jquery","permalink":"https://egoistian.com/tags/jquery/","url":"/async/tags/jquery.json","count":2},{"name":"webpack","permalink":"https://egoistian.com/tags/webpack/","url":"/async/tags/webpack.json","count":2},{"name":"tooling","permalink":"https://egoistian.com/tags/tooling/","url":"/async/tags/tooling.json","count":1}],"categories":[],"url":"/async/posts/2016/01/19/tooling-free-you-from-jquery.json","date":1453207438000,"path":{"year":2016,"month":1,"day":19,"name":"tooling-free-you-from-jquery"},"subtitle":"jQuery 只是个引子，泛指那些不用构建工具的 “显得很方便” 的开发方式","title":"tooling 让你从 jQuery 中解脱出来","permalink":"https://egoistian.com/2016/01/19/tooling-free-you-from-jquery/","content":"<h2 id=\"span-起因-span\"><span>起因</span></h2>\n<p>为什么我还需要用 jQuery？有时候我会有这样的疑惑。我觉得 jQuery 还存在于我某些小项目中的原因就是可以 “即插即用”。新建一个 <code>index.html</code>、复制一些代码、新建一个 <code>style</code> <code>script</code> 标签你就可以开始工作了，这种便利在某些时候非常好。</p>\n<p>比如刚才，我想给自己做一个用于收取捐赠的网页（也许会有开源世界的同好喜欢我的项目也说不定呢），我在 “简单粗暴一个 html 搞定” 和 “Webpack + Vue 配合各种构建工具” 之间摇摆不定。</p>\n<p>用过 Webpack 的都知道，也许配置和解决 bug 的时间会比写代码的时间更长，而且大部分情况配置文件都大同小异。那为什么不用<strong>一个配置适用多个项目</strong>？于是有了 <a href=\"https://github.com/egoist/tooling\" target=\"_blank\" rel=\"external\"><code>tooling</code></a>，它其实就是用一个内置的 Webpack 配置来运行和编译指定的项目。</p>\n<h2 id=\"span-tooling-带来了什么？-span\"><span>tooling 带来了什么？</span></h2>\n<p>也许我的表达并不直观，简而言之，tooling 让你开发的便利程度趋近直接用一个 html 搞定。</p>\n<p>tooling 内置了 Vue 和 React 的依赖，这意味着你要开发这两种框架的网页几乎是 <code>no setup</code>，新建一个项目，不用 <code>npm init</code>，不用安装任何依赖，直接：</p>\n<p><strong>index.js</strong></p>\n<pre><code class=\"language-javascript\">import Vue from 'vue'\nimport app from './app'\n\nnew Vue({\n  el: 'body',\n  components: {app}\n})\n</code></pre>\n<p><strong>app.vue</strong></p>\n<pre><code class=\"language-vue\">&lt;style&gt;\n  $color: cyan;\n  body {\n    h1 {\n      color: $color;\n    }\n  }\n&lt;/style&gt;\n\n&lt;template&gt;\n  &lt;h1&gt;Wow&lt;/h1&gt;\n&lt;/template&gt;\n</code></pre>\n<p>然后运行 <code>tooling watch -e index</code> 就可以开着热加载模式进行开发了。</p>\n<p>并不需要配置、对开发友好、ES6、PostCSS + PreCSS、享受 Vue 单文件组件的优势、React 的 JS everywhere 的畅快，这些带给你的远不止便利。</p>\n<h2 id=\"span-use-case-span\"><span>Use Case</span></h2>\n<p>如果你实在不知道这玩意能在哪些地方用，那么我告诉你吧。</p>\n<ul>\n<li>你的开源项目的 gh-pages 主页</li>\n<li>你个人的一些小实验或者一个大项目的 prototype</li>\n<li>你的各种需要网页来展示的小发明。</li>\n<li>many more…</li>\n</ul>\n<p>看，<a href=\"https://github.com/egoist/donate\" target=\"_blank\" rel=\"external\">donate</a> 就是一个例子，如果没用 tooling 的话这个 repo 里会多一堆配置文件，而现在我只需要 focus 这个项目本身。</p>\n<hr>\n<p><code>tooling</code> 的 GitHub 主页: <a href=\"https://github.com/egoist/tooling\" target=\"_blank\" rel=\"external\">https://github.com/egoist/tooling</a></p>\n"}