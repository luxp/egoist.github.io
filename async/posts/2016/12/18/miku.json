{"tags":[],"categories":[],"url":"/async/posts/2016/12/18/miku.json","date":1482060077000,"path":{"year":2016,"month":12,"day":18,"name":"miku"},"title":"miku: 一般性前端调试工具","permalink":"https://egoist.moe/2016/12/18/miku/","content":"<p>你大概知道 jsbin、jsfiddle、codepen 这些在线代码调试工具，我经常使用 jsbin 不过它们都有各自的局限性:</p>\n<ul>\n<li>编辑器不够强大，毕竟是在线工具</li>\n<li>没有模块系统支持，调用第三方库只能通过 script 标签引用 UMD 格式的文件</li>\n<li>局限于 HTML/CSS/JS</li>\n</ul>\n<p>所以我用我经常使用的 webpack 做了一个基于它的代码调试工具叫做 <a href=\"https://github.com/egoist/miku\" target=\"_blank\" rel=\"external\"><strong>miku</strong></a>，它主要就是解决了上述工具存在的不足。</p>\n<pre><code class=\"language-bash\">miku example.js example.css\n</code></pre>\n<p>miku 的原理就是你提供一些想测试的文件，比如叫 <code>example.js</code> 和 <code>example.css</code> 。它会将这些文件作为 webpack 的入口文件编译，然后通过 <a href=\"https://github.com/ampedandwired/html-webpack-plugin\" target=\"_blank\" rel=\"external\">html-webpack-plugin</a> 用一个 html 文件加载，最后通过服务器渲染出来，你就能打开浏览器看到显示效果了。</p>\n<p>这样做的好处是你能充分享受 webpack 的功能，我们都知道 webpack 的配置虽不是什么高难度的事但也是挺麻烦的，尤其当你有很多项目的时候。现在你可以直接运行 miku 通过预配置的 webpack 运行你的 demo 了。</p>\n<p>miku 默认添加了很多常用的 loader 配置:</p>\n<ul>\n<li>postcss</li>\n<li>babel</li>\n<li>coffeescriot</li>\n<li>typescript</li>\n<li>sass</li>\n<li>less</li>\n<li>pug</li>\n<li>livescript</li>\n</ul>\n<p>等等…… 而且图片和字体文件也用 file-loader 做了处理，svg 文件则使用 raw-loader 加载。</p>\n<p>当然「直接在浏览器中编辑 JS/CSS」那种在线调试工具的方便暂时也无可替代，虽然也有 <a href=\"http://webpackbin.com\" target=\"_blank\" rel=\"external\">webpackbin</a> <a href=\"http://esnextb.in\" target=\"_blank\" rel=\"external\">esnextbin</a> <a href=\"http://requirebin.com/\" target=\"_blank\" rel=\"external\">requirebin</a> 基于 bundler 的在线调试工具，不过我不只是想调试，也想让文件存在于我的本地磁盘里。</p>\n<h2><span>由来</span></h2>\n<p>任何事情都不是空穴来风，我的轮子尤其如此。我昨晚在搞一个叫做 <code>real-dom</code> 的项目，之后我才发现很类似 <a href=\"https://github.com/pakastin/redom\" target=\"_blank\" rel=\"external\">redom</a>，不过当时我有个「做个 example」的需求，手动预览这些用了 babel 的项目真的挺麻烦，所以想做这样一个东西。</p>\n<p><strong>虽然我之前的那个 <a href=\"https://github.com/egoist/vbuild\" target=\"_blank\" rel=\"external\">vbuild</a> 几乎能胜任这项任务，不过我之后联想到了 jsbin，就有是不是能继续往这方面发展的想法。</strong> 所以又一个轮子诞生了。</p>\n<blockquote>\n<p>Just build things. It doesn’t matter if someone else thinks it’s a bad idea as long as you think it isn’t. Really.</p>\n</blockquote>\n"}