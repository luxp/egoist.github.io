{"tags":[{"name":"javascript","permalink":"https://egoist.moe/tags/javascript/","url":"/async/tags/javascript.json","count":8},{"name":"canvas","permalink":"https://egoist.moe/tags/canvas/","url":"/async/tags/canvas.json","count":1}],"categories":[],"url":"/async/posts/2017/09/15/draw-chat-message-with-canvas.json","date":1505483882000,"path":{"year":2017,"month":9,"day":15,"name":"draw-chat-message-with-canvas"},"subtitle":"看了你就学不会 canvas 了","title":"用 canvas 画一个聊天消息","permalink":"https://egoist.moe/2017/09/15/draw-chat-message-with-canvas/","content":"<p>我不是个太求上进的人，对大多数事物都是浅尝辄止，喜欢卖弄自己一些一知半解的技巧。</p>\n<p>对于 canvas 我不甚了解，因为自己平时没有能用到的地方（毕竟这在我的舒适区之外）。今天我对一个感兴趣已久的表情包再度萌生了兴趣，比如其中一个：</p>\n<img src=\"https://i.loli.net/2017/09/15/59bbde6f0df7c.jpeg\" alt=\"sticker\" width=\"300\">\n<p><em>[source](<a href=\"https://t.me/addstickers/MadeInBitinn\" target=\"_blank\" rel=\"external\">https://t.me/addstickers/MadeInBitinn</a></em></p>\n<p>于是想用 canvas 自动从用户输入的内容中生成一个，虽然我基本没用过 canvas 不过基于以前做 <a href=\"https://egoist.moe/slogan/\">slogan</a> 的经验我还是开始了。</p>\n<p>首先得新建一个 canvas 元素我还是记得的，然后获取它的 2d context:</p>\n<pre><code class=\"language-js\">const $canvas = document.getElementById('canvas')\nconst ctx = $canvas.getContext('2d')\n</code></pre>\n<p>然后开始渲染，对于左边的头像我是暂时忽略的，毕竟我不记得怎么渲染图片了，于是先从其它的文字开始吧，我需要渲染一个用户名和右边的日期:</p>\n<pre><code class=\"language-js\">// 其实我也不记得怎么渲染文字了\n// Google 了一下发现是 ctx.fillText(text, x, y)\nctx.fillText('EGOIST', 50, 10)\n// 我给左边头像预留 50 宽度\n</code></pre>\n<p>它的效果是:</p>\n<p><img src=\"https://i.loli.net/2017/09/15/59bbe0f394e51.png\" alt=\"p1\"></p>\n<p>原图里的用户名好像是蓝色加粗未知字体，那我也搜搜改颜色和字体的 API 吧:</p>\n<pre><code class=\"language-js\">ctx.font = 'bold 14px sans-serif'\nctx.fillStyle = 'blue'\n</code></pre>\n<p><img src=\"https://i.loli.net/2017/09/15/59bbe259e6618.png\" alt=\"p2\"></p>\n<p>如图我是在 <code>fillText</code> 之前设置的 <code>font</code> 和 <code>fillStyle</code>，原因很明显。</p>\n<hr>\n<p>接下来要在右边渲染日期，我需要知道用户名的宽度，而我清楚地记得可以用 <code>ctx.measureText</code> 获取:</p>\n<pre><code class=\"language-js\">const usernameWidth = ctx.measureText('EGOIST').width\n// 重新设置字体和颜色不然会和用户名一样\nctx.font = '14px sans-serif'\nctx.fillStyle = '#666'\n// 时间的 `x` 是用户名宽度 + 预留头像的宽度 + 时间到用户名的距离\nctx.fillText('2017/7/7', usernameWidth + 50 + 10, 15)\n</code></pre>\n<p><img src=\"https://i.loli.net/2017/09/15/59bbe4404645e.png\" alt=\"p3\"></p>\n<hr>\n<p>接下来是消息的主体内容，它可能是多行的而 canvas 无法自动换行，我们需要根据换行符 <code>\\n</code> 手动识别:</p>\n<pre><code class=\"language-js\">const content = `hello world\ngoodbye world`\n\ncontent.split('\\n').forEach((text, index) =&gt; {\n  ctx.fillText(\n    text, \n    // 预留头像的宽度\n    50,\n    // content 距离用户名的距离 + 每一行的大概高度\n    30 + 15 * index\n  )\n})\n</code></pre>\n<p><img src=\"https://i.loli.net/2017/09/15/59bbe6a3a24df.png\" alt=\"p4\"></p>\n<hr>\n<p>最后只剩下头像了。我知道需要一个 <code>input</code> 元素来获取图片文件，然后以某种方式让 <code>ctx</code> 能够渲染它:</p>\n<pre><code class=\"language-html\">&lt;input type=&quot;file&quot; id=&quot;avatar&quot;&gt;\n</code></pre>\n<pre><code class=\"language-js\">document.getElementById('avatar').addEventListener('change', e =&gt; {\n  draw(e.target.files[0])\n})\n\n// 下面的内容基本是从 StackOverflow 复制的\nfunction draw(avatar) {\n  // 画头像\n  const img = new Image()\n  img.onload = () =&gt; {\n    // 头像实际宽度 40\n    // 剩下 10px 是到右边的边距\n    ctx.drawImage(img, 0, 5, 40, 40)\n  }\n  img.src = URL.createObjectURL(avatar)\n\n  // ... 画其它东西\n}\n</code></pre>\n<p><img src=\"https://i.loli.net/2017/09/15/59bbe9cc75c16.gif\" alt=\"p5\"></p>\n<hr>\n<p>完成的代码见: <a href=\"https://codepan.net/gist/6630c3910af4495ad06be5426db6c3f8\" target=\"_blank\" rel=\"external\">https://codepan.net/gist/6630c3910af4495ad06be5426db6c3f8</a><br>\n用 Vue 写的原始版本见: <a href=\"https://codepan.net/gist/a4d31a6dc1ac7517bd5d80dc62af1930\" target=\"_blank\" rel=\"external\">https://codepan.net/gist/a4d31a6dc1ac7517bd5d80dc62af1930</a></p>\n<h2 id=\"后日谈\">后日谈</h2>\n<p>这里的代码可能有问题的就是文字高度的获取方式，比如 <code>content</code> 每一行我是目测的 <code>15px</code>，这里肯定会出一些偏差，似乎也可以近似地把每一行的高度看成约等于 <code>ctx.measureText('M').width</code>，不过不知道中文是否会差的太多，应该会有更好且更优雅的方案吧。我擅长浅尝辄止，这里就不想追问了。</p>\n<p>写这篇文章的主要目的是秀出我愚蠢的写代码的方式供后人凭吊且让各位读者获取代码上的自信，你可能比我要好得多。</p>\n<img src=\"https://i.loli.net/2017/09/15/59bbece2a54ab.png\" alt=\"lol\" width=\"300\">\n"}